select 'AA_TABLE_ROW_ANALYSIS' as table_name, count(*) as row_count, :version_val as version from AA_TABLE_ROW_ANALYSIS UNION
select 'ABSTRACT_TYPE' as table_name, count(*) as row_count, :version_val as version from ABSTRACT_TYPE UNION
select 'ACCOUNT_TYPE' as table_name, count(*) as row_count, :version_val as version from ACCOUNT_TYPE UNION
select 'ACCT_DD_ATTR_DOC' as table_name, count(*) as row_count, :version_val as version from ACCT_DD_ATTR_DOC UNION
select 'ACTIVITY_TYPE' as table_name, count(*) as row_count, :version_val as version from ACTIVITY_TYPE UNION
select 'AFFILIATION_TYPE' as table_name, count(*) as row_count, :version_val as version from AFFILIATION_TYPE UNION
select 'APPOINTMENT_TYPE' as table_name, count(*) as row_count, :version_val as version from APPOINTMENT_TYPE UNION
select 'ARG_VALUE_LOOKUP' as table_name, count(*) as row_count, :version_val as version from ARG_VALUE_LOOKUP UNION
select 'ATTACHMENT_FILE' as table_name, count(*) as row_count, :version_val as version from ATTACHMENT_FILE UNION
select 'AWARD' as table_name, count(*) as row_count, :version_val as version from AWARD UNION
select 'AWARD_AMOUNT_INFO' as table_name, count(*) as row_count, :version_val as version from AWARD_AMOUNT_INFO UNION
select 'AWARD_AMOUNT_TRANSACTION' as table_name, count(*) as row_count, :version_val as version from AWARD_AMOUNT_TRANSACTION UNION
select 'AWARD_AMT_FNA_DISTRIBUTION' as table_name, count(*) as row_count, :version_val as version from AWARD_AMT_FNA_DISTRIBUTION UNION
select 'AWARD_APPROVED_EQUIPMENT' as table_name, count(*) as row_count, :version_val as version from AWARD_APPROVED_EQUIPMENT UNION
select 'AWARD_APPROVED_FOREIGN_TRAVEL' as table_name, count(*) as row_count, :version_val as version from AWARD_APPROVED_FOREIGN_TRAVEL UNION
select 'AWARD_APPROVED_SUBAWARDS' as table_name, count(*) as row_count, :version_val as version from AWARD_APPROVED_SUBAWARDS UNION
select 'AWARD_ATTACHMENT' as table_name, count(*) as row_count, :version_val as version from AWARD_ATTACHMENT UNION
select 'AWARD_ATTACHMENT_TYPE' as table_name, count(*) as row_count, :version_val as version from AWARD_ATTACHMENT_TYPE UNION
select 'AWARD_BASIS_OF_PAYMENT' as table_name, count(*) as row_count, :version_val as version from AWARD_BASIS_OF_PAYMENT UNION
select 'AWARD_BUDGET_DETAILS_EXT' as table_name, count(*) as row_count, :version_val as version from AWARD_BUDGET_DETAILS_EXT UNION
select 'AWARD_BUDGET_EXT' as table_name, count(*) as row_count, :version_val as version from AWARD_BUDGET_EXT UNION
select 'AWARD_BUDGET_LIMIT' as table_name, count(*) as row_count, :version_val as version from AWARD_BUDGET_LIMIT UNION
select 'AWARD_BUDGET_PERIOD_EXT' as table_name, count(*) as row_count, :version_val as version from AWARD_BUDGET_PERIOD_EXT UNION
select 'AWARD_BUDGET_STATUS' as table_name, count(*) as row_count, :version_val as version from AWARD_BUDGET_STATUS UNION
select 'AWARD_BUDGET_TYPE' as table_name, count(*) as row_count, :version_val as version from AWARD_BUDGET_TYPE UNION
select 'AWARD_CLOSEOUT' as table_name, count(*) as row_count, :version_val as version from AWARD_CLOSEOUT UNION
select 'AWARD_COMMENT' as table_name, count(*) as row_count, :version_val as version from AWARD_COMMENT UNION
select 'AWARD_COST_SHARE' as table_name, count(*) as row_count, :version_val as version from AWARD_COST_SHARE UNION
select 'AWARD_CUSTOM_DATA' as table_name, count(*) as row_count, :version_val as version from AWARD_CUSTOM_DATA UNION
select 'AWARD_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from AWARD_DOCUMENT UNION
select 'AWARD_EXEMPT_NUMBER' as table_name, count(*) as row_count, :version_val as version from AWARD_EXEMPT_NUMBER UNION
select 'AWARD_FUNDING_PROPOALS_BACKUP' as table_name, count(*) as row_count, :version_val as version from AWARD_FUNDING_PROPOALS_BACKUP UNION
select 'AWARD_FUNDING_PROPOSALS' as table_name, count(*) as row_count, :version_val as version from AWARD_FUNDING_PROPOSALS UNION
select 'AWARD_HIERARCHY' as table_name, count(*) as row_count, :version_val as version from AWARD_HIERARCHY UNION
select 'AWARD_IDC_RATE' as table_name, count(*) as row_count, :version_val as version from AWARD_IDC_RATE UNION
select 'AWARD_METHOD_OF_PAYMENT' as table_name, count(*) as row_count, :version_val as version from AWARD_METHOD_OF_PAYMENT UNION
select 'AWARD_NOTEPAD' as table_name, count(*) as row_count, :version_val as version from AWARD_NOTEPAD UNION
select 'AWARD_PAYMENT_SCHEDULE' as table_name, count(*) as row_count, :version_val as version from AWARD_PAYMENT_SCHEDULE UNION
select 'AWARD_PERSONS' as table_name, count(*) as row_count, :version_val as version from AWARD_PERSONS UNION
select 'AWARD_PERSON_CREDIT_SPLITS' as table_name, count(*) as row_count, :version_val as version from AWARD_PERSON_CREDIT_SPLITS UNION
select 'AWARD_PERSON_UNITS' as table_name, count(*) as row_count, :version_val as version from AWARD_PERSON_UNITS UNION
select 'AWARD_PERS_UNIT_CRED_SPLITS' as table_name, count(*) as row_count, :version_val as version from AWARD_PERS_UNIT_CRED_SPLITS UNION
select 'AWARD_REPORT_TERMS' as table_name, count(*) as row_count, :version_val as version from AWARD_REPORT_TERMS UNION
select 'AWARD_REP_TERMS_RECNT' as table_name, count(*) as row_count, :version_val as version from AWARD_REP_TERMS_RECNT UNION
select 'AWARD_SCIENCE_KEYWORD' as table_name, count(*) as row_count, :version_val as version from AWARD_SCIENCE_KEYWORD UNION
select 'AWARD_SPECIAL_REVIEW' as table_name, count(*) as row_count, :version_val as version from AWARD_SPECIAL_REVIEW UNION
select 'AWARD_SPONSOR_CONTACTS' as table_name, count(*) as row_count, :version_val as version from AWARD_SPONSOR_CONTACTS UNION
select 'AWARD_SPONSOR_TERM' as table_name, count(*) as row_count, :version_val as version from AWARD_SPONSOR_TERM UNION
select 'AWARD_STATUS' as table_name, count(*) as row_count, :version_val as version from AWARD_STATUS UNION
select 'AWARD_SYNC_CHANGE' as table_name, count(*) as row_count, :version_val as version from AWARD_SYNC_CHANGE UNION
select 'AWARD_SYNC_LOG' as table_name, count(*) as row_count, :version_val as version from AWARD_SYNC_LOG UNION
select 'AWARD_SYNC_STATUS' as table_name, count(*) as row_count, :version_val as version from AWARD_SYNC_STATUS UNION
select 'AWARD_TEMPLATE' as table_name, count(*) as row_count, :version_val as version from AWARD_TEMPLATE UNION
select 'AWARD_TEMPLATE_COMMENTS' as table_name, count(*) as row_count, :version_val as version from AWARD_TEMPLATE_COMMENTS UNION
select 'AWARD_TEMPLATE_CONTACT' as table_name, count(*) as row_count, :version_val as version from AWARD_TEMPLATE_CONTACT UNION
select 'AWARD_TEMPLATE_REPORT_TERMS' as table_name, count(*) as row_count, :version_val as version from AWARD_TEMPLATE_REPORT_TERMS UNION
select 'AWARD_TEMPLATE_TERMS' as table_name, count(*) as row_count, :version_val as version from AWARD_TEMPLATE_TERMS UNION
select 'AWARD_TEMPL_REP_TERMS_RECNT' as table_name, count(*) as row_count, :version_val as version from AWARD_TEMPL_REP_TERMS_RECNT UNION
select 'AWARD_TRANSACTION_TYPE' as table_name, count(*) as row_count, :version_val as version from AWARD_TRANSACTION_TYPE UNION
select 'AWARD_TRANSFERRING_SPONSOR' as table_name, count(*) as row_count, :version_val as version from AWARD_TRANSFERRING_SPONSOR UNION
select 'AWARD_TYPE' as table_name, count(*) as row_count, :version_val as version from AWARD_TYPE UNION
select 'AWARD_UNIT_CONTACTS' as table_name, count(*) as row_count, :version_val as version from AWARD_UNIT_CONTACTS UNION
select 'AWD_BGT_DET_CAL_AMTS_EXT' as table_name, count(*) as row_count, :version_val as version from AWD_BGT_DET_CAL_AMTS_EXT UNION
select 'AWD_BGT_PER_SUM_CALC_AMT' as table_name, count(*) as row_count, :version_val as version from AWD_BGT_PER_SUM_CALC_AMT UNION
select 'AWD_BUDGET_PER_CAL_AMTS_EXT' as table_name, count(*) as row_count, :version_val as version from AWD_BUDGET_PER_CAL_AMTS_EXT UNION
select 'AWD_BUDGET_PER_DET_EXT' as table_name, count(*) as row_count, :version_val as version from AWD_BUDGET_PER_DET_EXT UNION
select 'BATCH_CORRESPONDENCE' as table_name, count(*) as row_count, :version_val as version from BATCH_CORRESPONDENCE UNION
select 'BATCH_CORRESPONDENCE_DETAIL' as table_name, count(*) as row_count, :version_val as version from BATCH_CORRESPONDENCE_DETAIL UNION
select 'BUDGET' as table_name, count(*) as row_count, :version_val as version from BUDGET UNION
select 'BUDGET_CATEGORY' as table_name, count(*) as row_count, :version_val as version from BUDGET_CATEGORY UNION
select 'BUDGET_CATEGORY_MAPPING' as table_name, count(*) as row_count, :version_val as version from BUDGET_CATEGORY_MAPPING UNION
select 'BUDGET_CATEGORY_MAPS' as table_name, count(*) as row_count, :version_val as version from BUDGET_CATEGORY_MAPS UNION
select 'BUDGET_CATEGORY_TYPE' as table_name, count(*) as row_count, :version_val as version from BUDGET_CATEGORY_TYPE UNION
select 'BUDGET_DETAILS' as table_name, count(*) as row_count, :version_val as version from BUDGET_DETAILS UNION
select 'BUDGET_DETAILS_CAL_AMTS' as table_name, count(*) as row_count, :version_val as version from BUDGET_DETAILS_CAL_AMTS UNION
select 'BUDGET_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from BUDGET_DOCUMENT UNION
select 'BUDGET_MODULAR' as table_name, count(*) as row_count, :version_val as version from BUDGET_MODULAR UNION
select 'BUDGET_MODULAR_IDC' as table_name, count(*) as row_count, :version_val as version from BUDGET_MODULAR_IDC UNION
select 'BUDGET_PERIODS' as table_name, count(*) as row_count, :version_val as version from BUDGET_PERIODS UNION
select 'BUDGET_PERIOD_TYPE' as table_name, count(*) as row_count, :version_val as version from BUDGET_PERIOD_TYPE UNION
select 'BUDGET_PERSONNEL_CAL_AMTS' as table_name, count(*) as row_count, :version_val as version from BUDGET_PERSONNEL_CAL_AMTS UNION
select 'BUDGET_PERSONNEL_DETAILS' as table_name, count(*) as row_count, :version_val as version from BUDGET_PERSONNEL_DETAILS UNION
select 'BUDGET_PERSONS' as table_name, count(*) as row_count, :version_val as version from BUDGET_PERSONS UNION
select 'BUDGET_PER_DET_RATE_AND_BASE' as table_name, count(*) as row_count, :version_val as version from BUDGET_PER_DET_RATE_AND_BASE UNION
select 'BUDGET_PROJECT_INCOME' as table_name, count(*) as row_count, :version_val as version from BUDGET_PROJECT_INCOME UNION
select 'BUDGET_RATE_AND_BASE' as table_name, count(*) as row_count, :version_val as version from BUDGET_RATE_AND_BASE UNION
select 'BUDGET_STATUS' as table_name, count(*) as row_count, :version_val as version from BUDGET_STATUS UNION
select 'BUDGET_SUB_AWARDS' as table_name, count(*) as row_count, :version_val as version from BUDGET_SUB_AWARDS UNION
select 'BUDGET_SUB_AWARD_ATT' as table_name, count(*) as row_count, :version_val as version from BUDGET_SUB_AWARD_ATT UNION
select 'BUDGET_SUB_AWARD_FILES' as table_name, count(*) as row_count, :version_val as version from BUDGET_SUB_AWARD_FILES UNION
select 'CARRIER_TYPE' as table_name, count(*) as row_count, :version_val as version from CARRIER_TYPE UNION
select 'CFDA' as table_name, count(*) as row_count, :version_val as version from CFDA UNION
select 'CITIZENSHIP_TYPE_T' as table_name, count(*) as row_count, :version_val as version from CITIZENSHIP_TYPE_T UNION
select 'CLOSEOUT_REPORT_TYPE' as table_name, count(*) as row_count, :version_val as version from CLOSEOUT_REPORT_TYPE UNION
select 'COEUS_MODULE' as table_name, count(*) as row_count, :version_val as version from COEUS_MODULE UNION
select 'COEUS_SUB_MODULE' as table_name, count(*) as row_count, :version_val as version from COEUS_SUB_MODULE UNION
select 'COMMENT_TYPE' as table_name, count(*) as row_count, :version_val as version from COMMENT_TYPE UNION
select 'COMMITTEE' as table_name, count(*) as row_count, :version_val as version from COMMITTEE UNION
select 'COMMITTEE_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from COMMITTEE_DOCUMENT UNION
select 'COMMITTEE_TYPE' as table_name, count(*) as row_count, :version_val as version from COMMITTEE_TYPE UNION
select 'COMM_BATCH_CORRESP' as table_name, count(*) as row_count, :version_val as version from COMM_BATCH_CORRESP UNION
select 'COMM_BATCH_CORRESP_DETAIL' as table_name, count(*) as row_count, :version_val as version from COMM_BATCH_CORRESP_DETAIL UNION
select 'COMM_DECISION_MOTION_TYPE' as table_name, count(*) as row_count, :version_val as version from COMM_DECISION_MOTION_TYPE UNION
select 'COMM_MEMBERSHIPS' as table_name, count(*) as row_count, :version_val as version from COMM_MEMBERSHIPS UNION
select 'COMM_MEMBERSHIP_TYPE' as table_name, count(*) as row_count, :version_val as version from COMM_MEMBERSHIP_TYPE UNION
select 'COMM_MEMBER_EXPERTISE' as table_name, count(*) as row_count, :version_val as version from COMM_MEMBER_EXPERTISE UNION
select 'COMM_MEMBER_ROLES' as table_name, count(*) as row_count, :version_val as version from COMM_MEMBER_ROLES UNION
select 'COMM_RESEARCH_AREAS' as table_name, count(*) as row_count, :version_val as version from COMM_RESEARCH_AREAS UNION
select 'COMM_SCHEDULE' as table_name, count(*) as row_count, :version_val as version from COMM_SCHEDULE UNION
select 'COMM_SCHEDULE_ACT_ITEMS' as table_name, count(*) as row_count, :version_val as version from COMM_SCHEDULE_ACT_ITEMS UNION
select 'COMM_SCHEDULE_ATTENDANCE' as table_name, count(*) as row_count, :version_val as version from COMM_SCHEDULE_ATTENDANCE UNION
select 'COMM_SCHEDULE_FREQUENCY' as table_name, count(*) as row_count, :version_val as version from COMM_SCHEDULE_FREQUENCY UNION
select 'COMM_SCHEDULE_MINUTES' as table_name, count(*) as row_count, :version_val as version from COMM_SCHEDULE_MINUTES UNION
select 'COMM_SCHEDULE_MINUTE_DOC' as table_name, count(*) as row_count, :version_val as version from COMM_SCHEDULE_MINUTE_DOC UNION
select 'CONTACT_TYPE' as table_name, count(*) as row_count, :version_val as version from CONTACT_TYPE UNION
select 'CORRESPONDENT_TYPE' as table_name, count(*) as row_count, :version_val as version from CORRESPONDENT_TYPE UNION
select 'COST_ELEMENT' as table_name, count(*) as row_count, :version_val as version from COST_ELEMENT UNION
select 'COST_SHARE_TYPE' as table_name, count(*) as row_count, :version_val as version from COST_SHARE_TYPE UNION
select 'CUSTOM_ATTRIBUTE' as table_name, count(*) as row_count, :version_val as version from CUSTOM_ATTRIBUTE UNION
select 'CUSTOM_ATTRIBUTE_DATA_TYPE' as table_name, count(*) as row_count, :version_val as version from CUSTOM_ATTRIBUTE_DATA_TYPE UNION
select 'CUSTOM_ATTRIBUTE_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from CUSTOM_ATTRIBUTE_DOCUMENT UNION
select 'CUSTOM_ATTRIBUTE_DOC_VALUE' as table_name, count(*) as row_count, :version_val as version from CUSTOM_ATTRIBUTE_DOC_VALUE UNION
select 'DEADLINE_TYPE' as table_name, count(*) as row_count, :version_val as version from DEADLINE_TYPE UNION
select 'DEGREE_TYPE' as table_name, count(*) as row_count, :version_val as version from DEGREE_TYPE UNION
select 'DISTRIBUTION' as table_name, count(*) as row_count, :version_val as version from DISTRIBUTION UNION
select 'DOCUMENT_NEXTVALUE' as table_name, count(*) as row_count, :version_val as version from DOCUMENT_NEXTVALUE UNION
select 'EPS_PROPOSAL' as table_name, count(*) as row_count, :version_val as version from EPS_PROPOSAL UNION
select 'EPS_PROPOSAL_BUDGET_EXT' as table_name, count(*) as row_count, :version_val as version from EPS_PROPOSAL_BUDGET_EXT UNION
select 'EPS_PROPOSAL_BUDGET_STATUS' as table_name, count(*) as row_count, :version_val as version from EPS_PROPOSAL_BUDGET_STATUS UNION
select 'EPS_PROPOSAL_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from EPS_PROPOSAL_DOCUMENT UNION
select 'EPS_PROPOSAL_STATUS' as table_name, count(*) as row_count, :version_val as version from EPS_PROPOSAL_STATUS UNION
select 'EPS_PROP_ABSTRACT' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_ABSTRACT UNION
select 'EPS_PROP_CHANGED_DATA' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_CHANGED_DATA UNION
select 'EPS_PROP_COLUMNS_TO_ALTER' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_COLUMNS_TO_ALTER UNION
select 'EPS_PROP_CONG_DISTRICT' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_CONG_DISTRICT UNION
select 'EPS_PROP_COST_SHARING' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_COST_SHARING UNION
select 'EPS_PROP_EXEMPT_NUMBER' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_EXEMPT_NUMBER UNION
select 'EPS_PROP_IDC_RATE' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_IDC_RATE UNION
select 'EPS_PROP_LA_RATES' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_LA_RATES UNION
select 'EPS_PROP_LOCATION' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_LOCATION UNION
select 'EPS_PROP_PERSON' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PERSON UNION
select 'EPS_PROP_PERSON_BIO' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PERSON_BIO UNION
select 'EPS_PROP_PERSON_BIO_ATTACHMENT' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PERSON_BIO_ATTACHMENT UNION
select 'EPS_PROP_PERSON_DEGREE' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PERSON_DEGREE UNION
select 'EPS_PROP_PERSON_EXT' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PERSON_EXT UNION
select 'EPS_PROP_PERSON_ROLE' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PERSON_ROLE UNION
select 'EPS_PROP_PERSON_UNITS' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PERSON_UNITS UNION
select 'EPS_PROP_PERS_YNQ' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PERS_YNQ UNION
select 'EPS_PROP_PER_CREDIT_SPLIT' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PER_CREDIT_SPLIT UNION
select 'EPS_PROP_PER_DOC_TYPE' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_PER_DOC_TYPE UNION
select 'EPS_PROP_RATES' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_RATES UNION
select 'EPS_PROP_SCIENCE_KEYWORD' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_SCIENCE_KEYWORD UNION
select 'EPS_PROP_SITES' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_SITES UNION
select 'EPS_PROP_SPECIAL_REVIEW' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_SPECIAL_REVIEW UNION
select 'EPS_PROP_UNIT_CREDIT_SPLIT' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_UNIT_CREDIT_SPLIT UNION
select 'EPS_PROP_USER_ROLES' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_USER_ROLES UNION
select 'EPS_PROP_YNQ' as table_name, count(*) as row_count, :version_val as version from EPS_PROP_YNQ UNION
select 'EXEMPTION_TYPE' as table_name, count(*) as row_count, :version_val as version from EXEMPTION_TYPE UNION
select 'EXEMPT_STUDIES_CHECKLIST' as table_name, count(*) as row_count, :version_val as version from EXEMPT_STUDIES_CHECKLIST UNION
select 'EXPEDITED_REVIEW_CHECKLIST' as table_name, count(*) as row_count, :version_val as version from EXPEDITED_REVIEW_CHECKLIST UNION
select 'FP_DOC_TYPE_T' as table_name, count(*) as row_count, :version_val as version from FP_DOC_TYPE_T UNION
select 'FREQUENCY' as table_name, count(*) as row_count, :version_val as version from FREQUENCY UNION
select 'FREQUENCY_BASE' as table_name, count(*) as row_count, :version_val as version from FREQUENCY_BASE UNION
select 'FUNDING_SOURCE_TYPE' as table_name, count(*) as row_count, :version_val as version from FUNDING_SOURCE_TYPE UNION
select 'GROUP_TYPES' as table_name, count(*) as row_count, :version_val as version from GROUP_TYPES UNION
select 'IDC_RATE_TYPE' as table_name, count(*) as row_count, :version_val as version from IDC_RATE_TYPE UNION
select 'INSTITUTE_LA_RATES' as table_name, count(*) as row_count, :version_val as version from INSTITUTE_LA_RATES UNION
select 'INSTITUTE_PROPOSAL_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from INSTITUTE_PROPOSAL_DOCUMENT UNION
select 'INSTITUTE_RATES' as table_name, count(*) as row_count, :version_val as version from INSTITUTE_RATES UNION
select 'INV_CREDIT_TYPE' as table_name, count(*) as row_count, :version_val as version from INV_CREDIT_TYPE UNION
select 'IP_REVIEW' as table_name, count(*) as row_count, :version_val as version from IP_REVIEW UNION
select 'IP_REVIEW_ACTIVITY_TYPE' as table_name, count(*) as row_count, :version_val as version from IP_REVIEW_ACTIVITY_TYPE UNION
select 'IP_REVIEW_REQ_TYPE' as table_name, count(*) as row_count, :version_val as version from IP_REVIEW_REQ_TYPE UNION
select 'IP_REVIEW_RESULT_TYPE' as table_name, count(*) as row_count, :version_val as version from IP_REVIEW_RESULT_TYPE UNION
select 'JOB_CODE' as table_name, count(*) as row_count, :version_val as version from JOB_CODE UNION
select 'KC_QRTZ_BLOB_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_BLOB_TRIGGERS UNION
select 'KC_QRTZ_CALENDARS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_CALENDARS UNION
select 'KC_QRTZ_CRON_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_CRON_TRIGGERS UNION
select 'KC_QRTZ_FIRED_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_FIRED_TRIGGERS UNION
select 'KC_QRTZ_JOB_DETAILS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_JOB_DETAILS UNION
select 'KC_QRTZ_JOB_LISTENERS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_JOB_LISTENERS UNION
select 'KC_QRTZ_LOCKS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_LOCKS UNION
select 'KC_QRTZ_PAUSED_TRIGGER_GRPS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_PAUSED_TRIGGER_GRPS UNION
select 'KC_QRTZ_SCHEDULER_STATE' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_SCHEDULER_STATE UNION
select 'KC_QRTZ_SIMPLE_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_SIMPLE_TRIGGERS UNION
select 'KC_QRTZ_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_TRIGGERS UNION
select 'KC_QRTZ_TRIGGER_LISTENERS' as table_name, count(*) as row_count, :version_val as version from KC_QRTZ_TRIGGER_LISTENERS UNION
select 'KRA_USER' as table_name, count(*) as row_count, :version_val as version from KRA_USER UNION
select 'KREN_CHNL_PRODCR_T' as table_name, count(*) as row_count, :version_val as version from KREN_CHNL_PRODCR_T UNION
select 'KREN_CHNL_SUBSCRP_T' as table_name, count(*) as row_count, :version_val as version from KREN_CHNL_SUBSCRP_T UNION
select 'KREN_CHNL_T' as table_name, count(*) as row_count, :version_val as version from KREN_CHNL_T UNION
select 'KREN_CNTNT_TYP_T' as table_name, count(*) as row_count, :version_val as version from KREN_CNTNT_TYP_T UNION
select 'KREN_MSG_DELIV_T' as table_name, count(*) as row_count, :version_val as version from KREN_MSG_DELIV_T UNION
select 'KREN_MSG_T' as table_name, count(*) as row_count, :version_val as version from KREN_MSG_T UNION
select 'KREN_NTFCTN_MSG_DELIV_T' as table_name, count(*) as row_count, :version_val as version from KREN_NTFCTN_MSG_DELIV_T UNION
select 'KREN_NTFCTN_T' as table_name, count(*) as row_count, :version_val as version from KREN_NTFCTN_T UNION
select 'KREN_PRIO_T' as table_name, count(*) as row_count, :version_val as version from KREN_PRIO_T UNION
select 'KREN_PRODCR_T' as table_name, count(*) as row_count, :version_val as version from KREN_PRODCR_T UNION
select 'KREN_RECIP_DELIV_T' as table_name, count(*) as row_count, :version_val as version from KREN_RECIP_DELIV_T UNION
select 'KREN_RECIP_LIST_T' as table_name, count(*) as row_count, :version_val as version from KREN_RECIP_LIST_T UNION
select 'KREN_RECIP_PREFS_T' as table_name, count(*) as row_count, :version_val as version from KREN_RECIP_PREFS_T UNION
select 'KREN_RECIP_T' as table_name, count(*) as row_count, :version_val as version from KREN_RECIP_T UNION
select 'KREN_RVWER_T' as table_name, count(*) as row_count, :version_val as version from KREN_RVWER_T UNION
select 'KREN_SNDR_T' as table_name, count(*) as row_count, :version_val as version from KREN_SNDR_T UNION
select 'KREW_ACTN_ITM_T' as table_name, count(*) as row_count, :version_val as version from KREW_ACTN_ITM_T UNION
select 'KREW_ACTN_RQST_T' as table_name, count(*) as row_count, :version_val as version from KREW_ACTN_RQST_T UNION
select 'KREW_ACTN_TKN_T' as table_name, count(*) as row_count, :version_val as version from KREW_ACTN_TKN_T UNION
select 'KREW_APP_DOC_STAT_TRAN_T' as table_name, count(*) as row_count, :version_val as version from KREW_APP_DOC_STAT_TRAN_T UNION
select 'KREW_ATT_T' as table_name, count(*) as row_count, :version_val as version from KREW_ATT_T UNION
select 'KREW_DLGN_RSP_T' as table_name, count(*) as row_count, :version_val as version from KREW_DLGN_RSP_T UNION
select 'KREW_DOC_HDR_CNTNT_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_HDR_CNTNT_T UNION
select 'KREW_DOC_HDR_EXT_DT_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_HDR_EXT_DT_T UNION
select 'KREW_DOC_HDR_EXT_FLT_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_HDR_EXT_FLT_T UNION
select 'KREW_DOC_HDR_EXT_LONG_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_HDR_EXT_LONG_T UNION
select 'KREW_DOC_HDR_EXT_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_HDR_EXT_T UNION
select 'KREW_DOC_HDR_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_HDR_T UNION
select 'KREW_DOC_LNK_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_LNK_T UNION
select 'KREW_DOC_NTE_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_NTE_T UNION
select 'KREW_DOC_TYP_APP_DOC_STAT_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_TYP_APP_DOC_STAT_T UNION
select 'KREW_DOC_TYP_ATTR_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_TYP_ATTR_T UNION
select 'KREW_DOC_TYP_PLCY_RELN_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_TYP_PLCY_RELN_T UNION
select 'KREW_DOC_TYP_PROC_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_TYP_PROC_T UNION
select 'KREW_DOC_TYP_T' as table_name, count(*) as row_count, :version_val as version from KREW_DOC_TYP_T UNION
select 'KREW_EDL_ASSCTN_T' as table_name, count(*) as row_count, :version_val as version from KREW_EDL_ASSCTN_T UNION
select 'KREW_EDL_DEF_T' as table_name, count(*) as row_count, :version_val as version from KREW_EDL_DEF_T UNION
select 'KREW_EDL_DMP_T' as table_name, count(*) as row_count, :version_val as version from KREW_EDL_DMP_T UNION
select 'KREW_EDL_FLD_DMP_T' as table_name, count(*) as row_count, :version_val as version from KREW_EDL_FLD_DMP_T UNION
select 'KREW_HLP_T' as table_name, count(*) as row_count, :version_val as version from KREW_HLP_T UNION
select 'KREW_INIT_RTE_NODE_INSTN_T' as table_name, count(*) as row_count, :version_val as version from KREW_INIT_RTE_NODE_INSTN_T UNION
select 'KREW_OUT_BOX_ITM_T' as table_name, count(*) as row_count, :version_val as version from KREW_OUT_BOX_ITM_T UNION
select 'KREW_RIA_DOCTYPE_MAP_T' as table_name, count(*) as row_count, :version_val as version from KREW_RIA_DOCTYPE_MAP_T UNION
select 'KREW_RIA_DOC_T' as table_name, count(*) as row_count, :version_val as version from KREW_RIA_DOC_T UNION
select 'KREW_RMV_RPLC_DOC_T' as table_name, count(*) as row_count, :version_val as version from KREW_RMV_RPLC_DOC_T UNION
select 'KREW_RMV_RPLC_GRP_T' as table_name, count(*) as row_count, :version_val as version from KREW_RMV_RPLC_GRP_T UNION
select 'KREW_RMV_RPLC_RULE_T' as table_name, count(*) as row_count, :version_val as version from KREW_RMV_RPLC_RULE_T UNION
select 'KREW_RTE_BRCH_PROTO_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_BRCH_PROTO_T UNION
select 'KREW_RTE_BRCH_ST_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_BRCH_ST_T UNION
select 'KREW_RTE_BRCH_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_BRCH_T UNION
select 'KREW_RTE_NODE_CFG_PARM_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_NODE_CFG_PARM_T UNION
select 'KREW_RTE_NODE_INSTN_LNK_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_NODE_INSTN_LNK_T UNION
select 'KREW_RTE_NODE_INSTN_ST_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_NODE_INSTN_ST_T UNION
select 'KREW_RTE_NODE_INSTN_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_NODE_INSTN_T UNION
select 'KREW_RTE_NODE_LNK_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_NODE_LNK_T UNION
select 'KREW_RTE_NODE_T' as table_name, count(*) as row_count, :version_val as version from KREW_RTE_NODE_T UNION
select 'KREW_RULE_ATTR_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_ATTR_T UNION
select 'KREW_RULE_EXPR_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_EXPR_T UNION
select 'KREW_RULE_EXT_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_EXT_T UNION
select 'KREW_RULE_EXT_VAL_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_EXT_VAL_T UNION
select 'KREW_RULE_RSP_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_RSP_T UNION
select 'KREW_RULE_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_T UNION
select 'KREW_RULE_TMPL_ATTR_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_TMPL_ATTR_T UNION
select 'KREW_RULE_TMPL_OPTN_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_TMPL_OPTN_T UNION
select 'KREW_RULE_TMPL_T' as table_name, count(*) as row_count, :version_val as version from KREW_RULE_TMPL_T UNION
select 'KREW_STYLE_T' as table_name, count(*) as row_count, :version_val as version from KREW_STYLE_T UNION
select 'KREW_USR_OPTN_T' as table_name, count(*) as row_count, :version_val as version from KREW_USR_OPTN_T UNION
select 'KRIM_ADDR_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ADDR_TYP_T UNION
select 'KRIM_AFLTN_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_AFLTN_TYP_T UNION
select 'KRIM_ATTR_DEFN_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ATTR_DEFN_T UNION
select 'KRIM_CTZNSHP_STAT_T' as table_name, count(*) as row_count, :version_val as version from KRIM_CTZNSHP_STAT_T UNION
select 'KRIM_DLGN_MBR_ATTR_DATA_T' as table_name, count(*) as row_count, :version_val as version from KRIM_DLGN_MBR_ATTR_DATA_T UNION
select 'KRIM_DLGN_MBR_T' as table_name, count(*) as row_count, :version_val as version from KRIM_DLGN_MBR_T UNION
select 'KRIM_DLGN_T' as table_name, count(*) as row_count, :version_val as version from KRIM_DLGN_T UNION
select 'KRIM_EMAIL_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_EMAIL_TYP_T UNION
select 'KRIM_EMP_STAT_T' as table_name, count(*) as row_count, :version_val as version from KRIM_EMP_STAT_T UNION
select 'KRIM_EMP_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_EMP_TYP_T UNION
select 'KRIM_ENTITY_ADDR_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_ADDR_T UNION
select 'KRIM_ENTITY_AFLTN_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_AFLTN_T UNION
select 'KRIM_ENTITY_BIO_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_BIO_T UNION
select 'KRIM_ENTITY_CACHE_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_CACHE_T UNION
select 'KRIM_ENTITY_CTZNSHP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_CTZNSHP_T UNION
select 'KRIM_ENTITY_EMAIL_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_EMAIL_T UNION
select 'KRIM_ENTITY_EMP_INFO_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_EMP_INFO_T UNION
select 'KRIM_ENTITY_ENT_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_ENT_TYP_T UNION
select 'KRIM_ENTITY_ETHNIC_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_ETHNIC_T UNION
select 'KRIM_ENTITY_EXT_ID_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_EXT_ID_T UNION
select 'KRIM_ENTITY_NM_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_NM_T UNION
select 'KRIM_ENTITY_PHONE_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_PHONE_T UNION
select 'KRIM_ENTITY_PRIV_PREF_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_PRIV_PREF_T UNION
select 'KRIM_ENTITY_RESIDENCY_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_RESIDENCY_T UNION
select 'KRIM_ENTITY_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_T UNION
select 'KRIM_ENTITY_VISA_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENTITY_VISA_T UNION
select 'KRIM_ENT_NM_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENT_NM_TYP_T UNION
select 'KRIM_ENT_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ENT_TYP_T UNION
select 'KRIM_EXT_ID_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_EXT_ID_TYP_T UNION
select 'KRIM_GRP_ATTR_DATA_T' as table_name, count(*) as row_count, :version_val as version from KRIM_GRP_ATTR_DATA_T UNION
select 'KRIM_GRP_DOCUMENT_T' as table_name, count(*) as row_count, :version_val as version from KRIM_GRP_DOCUMENT_T UNION
select 'KRIM_GRP_MBR_T' as table_name, count(*) as row_count, :version_val as version from KRIM_GRP_MBR_T UNION
select 'KRIM_GRP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_GRP_T UNION
select 'KRIM_PERM_ATTR_DATA_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PERM_ATTR_DATA_T UNION
select 'KRIM_PERM_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PERM_T UNION
select 'KRIM_PERM_TMPL_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PERM_TMPL_T UNION
select 'KRIM_PERSON_DOCUMENT_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PERSON_DOCUMENT_T UNION
select 'KRIM_PHONE_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PHONE_TYP_T UNION
select 'KRIM_PND_ADDR_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_ADDR_MT UNION
select 'KRIM_PND_AFLTN_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_AFLTN_MT UNION
select 'KRIM_PND_CTZNSHP_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_CTZNSHP_MT UNION
select 'KRIM_PND_DLGN_MBR_ATTR_DATA_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_DLGN_MBR_ATTR_DATA_T UNION
select 'KRIM_PND_DLGN_MBR_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_DLGN_MBR_T UNION
select 'KRIM_PND_DLGN_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_DLGN_T UNION
select 'KRIM_PND_EMAIL_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_EMAIL_MT UNION
select 'KRIM_PND_EMP_INFO_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_EMP_INFO_MT UNION
select 'KRIM_PND_GRP_ATTR_DATA_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_GRP_ATTR_DATA_T UNION
select 'KRIM_PND_GRP_MBR_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_GRP_MBR_T UNION
select 'KRIM_PND_GRP_PRNCPL_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_GRP_PRNCPL_MT UNION
select 'KRIM_PND_NM_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_NM_MT UNION
select 'KRIM_PND_PHONE_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_PHONE_MT UNION
select 'KRIM_PND_PRIV_PREF_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_PRIV_PREF_MT UNION
select 'KRIM_PND_ROLE_MBR_ATTR_DATA_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_ROLE_MBR_ATTR_DATA_MT UNION
select 'KRIM_PND_ROLE_MBR_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_ROLE_MBR_MT UNION
select 'KRIM_PND_ROLE_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_ROLE_MT UNION
select 'KRIM_PND_ROLE_PERM_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_ROLE_PERM_T UNION
select 'KRIM_PND_ROLE_RSP_ACTN_MT' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_ROLE_RSP_ACTN_MT UNION
select 'KRIM_PND_ROLE_RSP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PND_ROLE_RSP_T UNION
select 'KRIM_PRNCPL_T' as table_name, count(*) as row_count, :version_val as version from KRIM_PRNCPL_T UNION
select 'KRIM_ROLE_DOCUMENT_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ROLE_DOCUMENT_T UNION
select 'KRIM_ROLE_MBR_ATTR_DATA_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ROLE_MBR_ATTR_DATA_T UNION
select 'KRIM_ROLE_MBR_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ROLE_MBR_T UNION
select 'KRIM_ROLE_PERM_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ROLE_PERM_T UNION
select 'KRIM_ROLE_RSP_ACTN_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ROLE_RSP_ACTN_T UNION
select 'KRIM_ROLE_RSP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ROLE_RSP_T UNION
select 'KRIM_ROLE_T' as table_name, count(*) as row_count, :version_val as version from KRIM_ROLE_T UNION
select 'KRIM_RSP_ATTR_DATA_T' as table_name, count(*) as row_count, :version_val as version from KRIM_RSP_ATTR_DATA_T UNION
select 'KRIM_RSP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_RSP_T UNION
select 'KRIM_RSP_TMPL_T' as table_name, count(*) as row_count, :version_val as version from KRIM_RSP_TMPL_T UNION
select 'KRIM_TYP_ATTR_T' as table_name, count(*) as row_count, :version_val as version from KRIM_TYP_ATTR_T UNION
select 'KRIM_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRIM_TYP_T UNION
select 'KRNS_ADHOC_RTE_ACTN_RECIP_T' as table_name, count(*) as row_count, :version_val as version from KRNS_ADHOC_RTE_ACTN_RECIP_T UNION
select 'KRNS_ATT_T' as table_name, count(*) as row_count, :version_val as version from KRNS_ATT_T UNION
select 'KRNS_CAMPUS_T' as table_name, count(*) as row_count, :version_val as version from KRNS_CAMPUS_T UNION
select 'KRNS_CMP_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRNS_CMP_TYP_T UNION
select 'KRNS_DOC_HDR_T' as table_name, count(*) as row_count, :version_val as version from KRNS_DOC_HDR_T UNION
select 'KRNS_LOOKUP_RSLT_T' as table_name, count(*) as row_count, :version_val as version from KRNS_LOOKUP_RSLT_T UNION
select 'KRNS_LOOKUP_SEL_T' as table_name, count(*) as row_count, :version_val as version from KRNS_LOOKUP_SEL_T UNION
select 'KRNS_MAINT_DOC_ATT_T' as table_name, count(*) as row_count, :version_val as version from KRNS_MAINT_DOC_ATT_T UNION
select 'KRNS_MAINT_DOC_T' as table_name, count(*) as row_count, :version_val as version from KRNS_MAINT_DOC_T UNION
select 'KRNS_MAINT_LOCK_T' as table_name, count(*) as row_count, :version_val as version from KRNS_MAINT_LOCK_T UNION
select 'KRNS_NMSPC_T' as table_name, count(*) as row_count, :version_val as version from KRNS_NMSPC_T UNION
select 'KRNS_NTE_T' as table_name, count(*) as row_count, :version_val as version from KRNS_NTE_T UNION
select 'KRNS_NTE_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRNS_NTE_TYP_T UNION
select 'KRNS_PARM_DTL_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRNS_PARM_DTL_TYP_T UNION
select 'KRNS_PARM_T' as table_name, count(*) as row_count, :version_val as version from KRNS_PARM_T UNION
select 'KRNS_PARM_TYP_T' as table_name, count(*) as row_count, :version_val as version from KRNS_PARM_TYP_T UNION
select 'KRNS_PESSIMISTIC_LOCK_T' as table_name, count(*) as row_count, :version_val as version from KRNS_PESSIMISTIC_LOCK_T UNION
select 'KRNS_SESN_DOC_T' as table_name, count(*) as row_count, :version_val as version from KRNS_SESN_DOC_T UNION
select 'KRSB_BAM_PARM_T' as table_name, count(*) as row_count, :version_val as version from KRSB_BAM_PARM_T UNION
select 'KRSB_BAM_T' as table_name, count(*) as row_count, :version_val as version from KRSB_BAM_T UNION
select 'KRSB_FLT_SVC_DEF_T' as table_name, count(*) as row_count, :version_val as version from KRSB_FLT_SVC_DEF_T UNION
select 'KRSB_MSG_PYLD_T' as table_name, count(*) as row_count, :version_val as version from KRSB_MSG_PYLD_T UNION
select 'KRSB_MSG_QUE_T' as table_name, count(*) as row_count, :version_val as version from KRSB_MSG_QUE_T UNION
select 'KRSB_QRTZ_BLOB_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_BLOB_TRIGGERS UNION
select 'KRSB_QRTZ_CALENDARS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_CALENDARS UNION
select 'KRSB_QRTZ_CRON_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_CRON_TRIGGERS UNION
select 'KRSB_QRTZ_FIRED_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_FIRED_TRIGGERS UNION
select 'KRSB_QRTZ_JOB_DETAILS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_JOB_DETAILS UNION
select 'KRSB_QRTZ_JOB_LISTENERS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_JOB_LISTENERS UNION
select 'KRSB_QRTZ_LOCKS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_LOCKS UNION
select 'KRSB_QRTZ_PAUSED_TRIGGER_GRPS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_PAUSED_TRIGGER_GRPS UNION
select 'KRSB_QRTZ_SCHEDULER_STATE' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_SCHEDULER_STATE UNION
select 'KRSB_QRTZ_SIMPLE_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_SIMPLE_TRIGGERS UNION
select 'KRSB_QRTZ_TRIGGERS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_TRIGGERS UNION
select 'KRSB_QRTZ_TRIGGER_LISTENERS' as table_name, count(*) as row_count, :version_val as version from KRSB_QRTZ_TRIGGER_LISTENERS UNION
select 'KRSB_SVC_DEF_T' as table_name, count(*) as row_count, :version_val as version from KRSB_SVC_DEF_T UNION
select 'KR_COUNTRY_T' as table_name, count(*) as row_count, :version_val as version from KR_COUNTRY_T UNION
select 'KR_COUNTY_T' as table_name, count(*) as row_count, :version_val as version from KR_COUNTY_T UNION
select 'KR_POSTAL_CODE_T' as table_name, count(*) as row_count, :version_val as version from KR_POSTAL_CODE_T UNION
select 'KR_STATE_T' as table_name, count(*) as row_count, :version_val as version from KR_STATE_T UNION
select 'LOCATION_TYPE' as table_name, count(*) as row_count, :version_val as version from LOCATION_TYPE UNION
select 'MAIL_BY' as table_name, count(*) as row_count, :version_val as version from MAIL_BY UNION
select 'MAIL_TYPE' as table_name, count(*) as row_count, :version_val as version from MAIL_TYPE UNION
select 'MEMBERSHIP_ROLE' as table_name, count(*) as row_count, :version_val as version from MEMBERSHIP_ROLE UNION
select 'MINUTE_ENTRY_TYPE' as table_name, count(*) as row_count, :version_val as version from MINUTE_ENTRY_TYPE UNION
select 'MSG_OF_THE_DAY' as table_name, count(*) as row_count, :version_val as version from MSG_OF_THE_DAY UNION
select 'NARRATIVE' as table_name, count(*) as row_count, :version_val as version from NARRATIVE UNION
select 'NARRATIVE_ATTACHMENT' as table_name, count(*) as row_count, :version_val as version from NARRATIVE_ATTACHMENT UNION
select 'NARRATIVE_STATUS' as table_name, count(*) as row_count, :version_val as version from NARRATIVE_STATUS UNION
select 'NARRATIVE_TYPE' as table_name, count(*) as row_count, :version_val as version from NARRATIVE_TYPE UNION
select 'NARRATIVE_USER_RIGHTS' as table_name, count(*) as row_count, :version_val as version from NARRATIVE_USER_RIGHTS UNION
select 'NOTICE_OF_OPPORTUNITY' as table_name, count(*) as row_count, :version_val as version from NOTICE_OF_OPPORTUNITY UNION
select 'NOTIFICATION' as table_name, count(*) as row_count, :version_val as version from NOTIFICATION UNION
select 'NOTIFICATION_TYPE' as table_name, count(*) as row_count, :version_val as version from NOTIFICATION_TYPE UNION
select 'NOTIFICATION_TYPE_RECIPIENT' as table_name, count(*) as row_count, :version_val as version from NOTIFICATION_TYPE_RECIPIENT UNION
select 'NSF_CODES' as table_name, count(*) as row_count, :version_val as version from NSF_CODES UNION
select 'ORGANIZATION' as table_name, count(*) as row_count, :version_val as version from ORGANIZATION UNION
select 'ORGANIZATION_AUDIT' as table_name, count(*) as row_count, :version_val as version from ORGANIZATION_AUDIT UNION
select 'ORGANIZATION_IDC' as table_name, count(*) as row_count, :version_val as version from ORGANIZATION_IDC UNION
select 'ORGANIZATION_TYPE' as table_name, count(*) as row_count, :version_val as version from ORGANIZATION_TYPE UNION
select 'ORGANIZATION_TYPE_LIST' as table_name, count(*) as row_count, :version_val as version from ORGANIZATION_TYPE_LIST UNION
select 'ORGANIZATION_YNQ' as table_name, count(*) as row_count, :version_val as version from ORGANIZATION_YNQ UNION
select 'PENDING_TRANSACTIONS' as table_name, count(*) as row_count, :version_val as version from PENDING_TRANSACTIONS UNION
select 'PERSON_APPOINTMENT' as table_name, count(*) as row_count, :version_val as version from PERSON_APPOINTMENT UNION
select 'PERSON_DEGREE' as table_name, count(*) as row_count, :version_val as version from PERSON_DEGREE UNION
select 'PERSON_EDITABLE_FIELDS' as table_name, count(*) as row_count, :version_val as version from PERSON_EDITABLE_FIELDS UNION
select 'PERSON_EXT_T' as table_name, count(*) as row_count, :version_val as version from PERSON_EXT_T UNION
select 'PERSON_TRAINING' as table_name, count(*) as row_count, :version_val as version from PERSON_TRAINING UNION
select 'PROPOSAL' as table_name, count(*) as row_count, :version_val as version from PROPOSAL UNION
select 'PROPOSAL_ADMIN_DETAILS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_ADMIN_DETAILS UNION
select 'PROPOSAL_COMMENTS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_COMMENTS UNION
select 'PROPOSAL_COST_SHARING' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_COST_SHARING UNION
select 'PROPOSAL_CUSTOM_DATA' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_CUSTOM_DATA UNION
select 'PROPOSAL_EXEMPT_NUMBER' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_EXEMPT_NUMBER UNION
select 'PROPOSAL_IDC_RATE' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_IDC_RATE UNION
select 'PROPOSAL_INV_CERTIFICATION' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_INV_CERTIFICATION UNION
select 'PROPOSAL_IP_REVIEW_JOIN' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_IP_REVIEW_JOIN UNION
select 'PROPOSAL_IP_REV_ACTIVITY' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_IP_REV_ACTIVITY UNION
select 'PROPOSAL_LOG' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_LOG UNION
select 'PROPOSAL_LOG_STATUS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_LOG_STATUS UNION
select 'PROPOSAL_LOG_TYPE' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_LOG_TYPE UNION
select 'PROPOSAL_NOTEPAD' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_NOTEPAD UNION
select 'PROPOSAL_PERSONS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_PERSONS UNION
select 'PROPOSAL_PERSON_UNITS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_PERSON_UNITS UNION
select 'PROPOSAL_PERS_UNIT_CRED_SPLITS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_PERS_UNIT_CRED_SPLITS UNION
select 'PROPOSAL_PER_CREDIT_SPLIT' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_PER_CREDIT_SPLIT UNION
select 'PROPOSAL_RESPONSE' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_RESPONSE UNION
select 'PROPOSAL_SCIENCE_KEYWORD' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_SCIENCE_KEYWORD UNION
select 'PROPOSAL_SPECIAL_REVIEW' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_SPECIAL_REVIEW UNION
select 'PROPOSAL_STATE' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_STATE UNION
select 'PROPOSAL_STATUS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_STATUS UNION
select 'PROPOSAL_TYPE' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_TYPE UNION
select 'PROPOSAL_UNITS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_UNITS UNION
select 'PROPOSAL_UNIT_CONTACTS' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_UNIT_CONTACTS UNION
select 'PROPOSAL_UNIT_CREDIT_SPLIT' as table_name, count(*) as row_count, :version_val as version from PROPOSAL_UNIT_CREDIT_SPLIT UNION
select 'PROP_ROLE_TEMPLATE' as table_name, count(*) as row_count, :version_val as version from PROP_ROLE_TEMPLATE UNION
select 'PROTOCOL' as table_name, count(*) as row_count, :version_val as version from PROTOCOL UNION
select 'PROTOCOL_ACTIONS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ACTIONS UNION
select 'PROTOCOL_ACTION_TYPE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ACTION_TYPE UNION
select 'PROTOCOL_ATTACHMENT_GROUP' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ATTACHMENT_GROUP UNION
select 'PROTOCOL_ATTACHMENT_PERSONNEL' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ATTACHMENT_PERSONNEL UNION
select 'PROTOCOL_ATTACHMENT_PROTOCOL' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ATTACHMENT_PROTOCOL UNION
select 'PROTOCOL_ATTACHMENT_STATUS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ATTACHMENT_STATUS UNION
select 'PROTOCOL_ATTACHMENT_TYPE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ATTACHMENT_TYPE UNION
select 'PROTOCOL_ATTACHMENT_TYPE_GROUP' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ATTACHMENT_TYPE_GROUP UNION
select 'PROTOCOL_CONTINGENCY' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_CONTINGENCY UNION
select 'PROTOCOL_CORRESPONDENCE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_CORRESPONDENCE UNION
select 'PROTOCOL_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_DOCUMENT UNION
select 'PROTOCOL_EXEMPT_CHKLST' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_EXEMPT_CHKLST UNION
select 'PROTOCOL_EXEMPT_NUMBER' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_EXEMPT_NUMBER UNION
select 'PROTOCOL_EXPIDITED_CHKLST' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_EXPIDITED_CHKLST UNION
select 'PROTOCOL_FUNDING_SOURCE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_FUNDING_SOURCE UNION
select 'PROTOCOL_LOCATION' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_LOCATION UNION
select 'PROTOCOL_MODULES' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_MODULES UNION
select 'PROTOCOL_NOTEPAD' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_NOTEPAD UNION
select 'PROTOCOL_ONLN_RVWS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ONLN_RVWS UNION
select 'PROTOCOL_ONLN_RVW_DETERM_RECOM' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ONLN_RVW_DETERM_RECOM UNION
select 'PROTOCOL_ONLN_RVW_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ONLN_RVW_DOCUMENT UNION
select 'PROTOCOL_ONLN_RVW_STATUS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ONLN_RVW_STATUS UNION
select 'PROTOCOL_ORG_TYPE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_ORG_TYPE UNION
select 'PROTOCOL_PERSONS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_PERSONS UNION
select 'PROTOCOL_PERSON_ROLES' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_PERSON_ROLES UNION
select 'PROTOCOL_PERSON_ROLE_MAPPING' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_PERSON_ROLE_MAPPING UNION
select 'PROTOCOL_REFERENCES' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_REFERENCES UNION
select 'PROTOCOL_REFERENCE_TYPE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_REFERENCE_TYPE UNION
select 'PROTOCOL_RESEARCH_AREAS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_RESEARCH_AREAS UNION
select 'PROTOCOL_REVIEWERS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_REVIEWERS UNION
select 'PROTOCOL_REVIEWER_TYPE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_REVIEWER_TYPE UNION
select 'PROTOCOL_REVIEW_TYPE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_REVIEW_TYPE UNION
select 'PROTOCOL_RISK_LEVELS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_RISK_LEVELS UNION
select 'PROTOCOL_SPECIAL_REVIEW' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_SPECIAL_REVIEW UNION
select 'PROTOCOL_STATUS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_STATUS UNION
select 'PROTOCOL_SUBMISSION' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_SUBMISSION UNION
select 'PROTOCOL_SUBMISSION_DOC' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_SUBMISSION_DOC UNION
select 'PROTOCOL_TYPE' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_TYPE UNION
select 'PROTOCOL_UNITS' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_UNITS UNION
select 'PROTOCOL_VOTE_ABSTAINEES' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_VOTE_ABSTAINEES UNION
select 'PROTOCOL_VOTE_RECUSED' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_VOTE_RECUSED UNION
select 'PROTOCOL_VULNERABLE_SUB' as table_name, count(*) as row_count, :version_val as version from PROTOCOL_VULNERABLE_SUB UNION
select 'PROTO_AMEND_RENEWAL' as table_name, count(*) as row_count, :version_val as version from PROTO_AMEND_RENEWAL UNION
select 'PROTO_AMEND_RENEW_MODULES' as table_name, count(*) as row_count, :version_val as version from PROTO_AMEND_RENEW_MODULES UNION
select 'PROTO_CORRESP_TEMPL' as table_name, count(*) as row_count, :version_val as version from PROTO_CORRESP_TEMPL UNION
select 'PROTO_CORRESP_TYPE' as table_name, count(*) as row_count, :version_val as version from PROTO_CORRESP_TYPE UNION
select 'PROTO_NOTIFICATION_TEMPL' as table_name, count(*) as row_count, :version_val as version from PROTO_NOTIFICATION_TEMPL UNION
select 'QUESTION' as table_name, count(*) as row_count, :version_val as version from QUESTION UNION
select 'QUESTIONNAIRE' as table_name, count(*) as row_count, :version_val as version from QUESTIONNAIRE UNION
select 'QUESTIONNAIRE_ANSWER' as table_name, count(*) as row_count, :version_val as version from QUESTIONNAIRE_ANSWER UNION
select 'QUESTIONNAIRE_ANSWER_HEADER' as table_name, count(*) as row_count, :version_val as version from QUESTIONNAIRE_ANSWER_HEADER UNION
select 'QUESTIONNAIRE_CONDITION_TYPE' as table_name, count(*) as row_count, :version_val as version from QUESTIONNAIRE_CONDITION_TYPE UNION
select 'QUESTIONNAIRE_QUESTIONS' as table_name, count(*) as row_count, :version_val as version from QUESTIONNAIRE_QUESTIONS UNION
select 'QUESTIONNAIRE_USAGE' as table_name, count(*) as row_count, :version_val as version from QUESTIONNAIRE_USAGE UNION
select 'QUESTION_EXPLANATION' as table_name, count(*) as row_count, :version_val as version from QUESTION_EXPLANATION UNION
select 'QUESTION_TYPES' as table_name, count(*) as row_count, :version_val as version from QUESTION_TYPES UNION
select 'RATE_CLASS' as table_name, count(*) as row_count, :version_val as version from RATE_CLASS UNION
select 'RATE_CLASS_TYPE' as table_name, count(*) as row_count, :version_val as version from RATE_CLASS_TYPE UNION
select 'RATE_TYPE' as table_name, count(*) as row_count, :version_val as version from RATE_TYPE UNION
select 'REPORT' as table_name, count(*) as row_count, :version_val as version from REPORT UNION
select 'REPORT_CLASS' as table_name, count(*) as row_count, :version_val as version from REPORT_CLASS UNION
select 'RESEARCH_AREAS' as table_name, count(*) as row_count, :version_val as version from RESEARCH_AREAS UNION
select 'RIGHTS' as table_name, count(*) as row_count, :version_val as version from RIGHTS UNION
select 'RISK_LEVEL' as table_name, count(*) as row_count, :version_val as version from RISK_LEVEL UNION
select 'ROLE' as table_name, count(*) as row_count, :version_val as version from ROLE UNION
select 'ROLE_RIGHTS' as table_name, count(*) as row_count, :version_val as version from ROLE_RIGHTS UNION
select 'ROLODEX' as table_name, count(*) as row_count, :version_val as version from ROLODEX UNION
select 'S2S_APPLICATION' as table_name, count(*) as row_count, :version_val as version from S2S_APPLICATION UNION
select 'S2S_APP_ATTACHMENTS' as table_name, count(*) as row_count, :version_val as version from S2S_APP_ATTACHMENTS UNION
select 'S2S_APP_SUBMISSION' as table_name, count(*) as row_count, :version_val as version from S2S_APP_SUBMISSION UNION
select 'S2S_FORM_TO_QUESTIONNAIRE' as table_name, count(*) as row_count, :version_val as version from S2S_FORM_TO_QUESTIONNAIRE UNION
select 'S2S_OPPORTUNITY' as table_name, count(*) as row_count, :version_val as version from S2S_OPPORTUNITY UNION
select 'S2S_OPP_FORMS' as table_name, count(*) as row_count, :version_val as version from S2S_OPP_FORMS UNION
select 'S2S_REVISION_TYPE' as table_name, count(*) as row_count, :version_val as version from S2S_REVISION_TYPE UNION
select 'S2S_SUBMISSION_TYPE' as table_name, count(*) as row_count, :version_val as version from S2S_SUBMISSION_TYPE UNION
select 'SCHEDULE_ACT_ITEM_TYPE' as table_name, count(*) as row_count, :version_val as version from SCHEDULE_ACT_ITEM_TYPE UNION
select 'SCHEDULE_AGENDA' as table_name, count(*) as row_count, :version_val as version from SCHEDULE_AGENDA UNION
select 'SCHEDULE_STATUS' as table_name, count(*) as row_count, :version_val as version from SCHEDULE_STATUS UNION
select 'SCHOOL_CODE' as table_name, count(*) as row_count, :version_val as version from SCHOOL_CODE UNION
select 'SCIENCE_KEYWORD' as table_name, count(*) as row_count, :version_val as version from SCIENCE_KEYWORD UNION
select 'SPECIAL_REVIEW' as table_name, count(*) as row_count, :version_val as version from SPECIAL_REVIEW UNION
select 'SPECIAL_REVIEW_USAGE' as table_name, count(*) as row_count, :version_val as version from SPECIAL_REVIEW_USAGE UNION
select 'SPONSOR' as table_name, count(*) as row_count, :version_val as version from SPONSOR UNION
select 'SPONSOR_FORMS' as table_name, count(*) as row_count, :version_val as version from SPONSOR_FORMS UNION
select 'SPONSOR_FORM_TEMPLATES' as table_name, count(*) as row_count, :version_val as version from SPONSOR_FORM_TEMPLATES UNION
select 'SPONSOR_HIERARCHY' as table_name, count(*) as row_count, :version_val as version from SPONSOR_HIERARCHY UNION
select 'SPONSOR_HIERARCHY_MT' as table_name, count(*) as row_count, :version_val as version from SPONSOR_HIERARCHY_MT UNION
select 'SPONSOR_TERM' as table_name, count(*) as row_count, :version_val as version from SPONSOR_TERM UNION
select 'SPONSOR_TERM_TYPE' as table_name, count(*) as row_count, :version_val as version from SPONSOR_TERM_TYPE UNION
select 'SPONSOR_TYPE' as table_name, count(*) as row_count, :version_val as version from SPONSOR_TYPE UNION
select 'SP_REV_APPROVAL_TYPE' as table_name, count(*) as row_count, :version_val as version from SP_REV_APPROVAL_TYPE UNION
select 'STATE_CODE' as table_name, count(*) as row_count, :version_val as version from STATE_CODE UNION
select 'SUBMISSION_STATUS' as table_name, count(*) as row_count, :version_val as version from SUBMISSION_STATUS UNION
select 'SUBMISSION_TYPE' as table_name, count(*) as row_count, :version_val as version from SUBMISSION_TYPE UNION
select 'SUBMISSION_TYPE_QUALIFIER' as table_name, count(*) as row_count, :version_val as version from SUBMISSION_TYPE_QUALIFIER UNION
select 'TBN' as table_name, count(*) as row_count, :version_val as version from TBN UNION
select 'TEST1_RESULTS' as table_name, count(*) as row_count, :version_val as version from TEST1_RESULTS UNION
select 'TEST1_RESULTS2' as table_name, count(*) as row_count, :version_val as version from TEST1_RESULTS2 UNION
select 'TIME_AND_MONEY_DOCUMENT' as table_name, count(*) as row_count, :version_val as version from TIME_AND_MONEY_DOCUMENT UNION
select 'TRAINING' as table_name, count(*) as row_count, :version_val as version from TRAINING UNION
select 'TRAINING_STIPEND_RATES' as table_name, count(*) as row_count, :version_val as version from TRAINING_STIPEND_RATES UNION
select 'TRANSACTION_DETAILS' as table_name, count(*) as row_count, :version_val as version from TRANSACTION_DETAILS UNION
select 'TRV_ACCT_USE_RT_T' as table_name, count(*) as row_count, :version_val as version from TRV_ACCT_USE_RT_T UNION
select 'TST_SEARCH_ATTR_INDX_TST_DOC_T' as table_name, count(*) as row_count, :version_val as version from TST_SEARCH_ATTR_INDX_TST_DOC_T UNION
select 'UH_AWARD_EXT_T' as table_name, count(*) as row_count, :version_val as version from UH_AWARD_EXT_T UNION
select 'UH_UNIT_COLLEGE' as table_name, count(*) as row_count, :version_val as version from UH_UNIT_COLLEGE UNION
select 'UNIT' as table_name, count(*) as row_count, :version_val as version from UNIT UNION
select 'UNIT_ADMINISTRATOR' as table_name, count(*) as row_count, :version_val as version from UNIT_ADMINISTRATOR UNION
select 'UNIT_ADMINISTRATOR_TYPE' as table_name, count(*) as row_count, :version_val as version from UNIT_ADMINISTRATOR_TYPE UNION
select 'USER_ROLES' as table_name, count(*) as row_count, :version_val as version from USER_ROLES UNION
select 'USER_TABLES_TEMP' as table_name, count(*) as row_count, :version_val as version from USER_TABLES_TEMP UNION
select 'VALID_AWARD_BASIS_PAYMENT' as table_name, count(*) as row_count, :version_val as version from VALID_AWARD_BASIS_PAYMENT UNION
select 'VALID_BASIS_METHOD_PMT' as table_name, count(*) as row_count, :version_val as version from VALID_BASIS_METHOD_PMT UNION
select 'VALID_CALC_TYPES' as table_name, count(*) as row_count, :version_val as version from VALID_CALC_TYPES UNION
select 'VALID_CE_JOB_CODES' as table_name, count(*) as row_count, :version_val as version from VALID_CE_JOB_CODES UNION
select 'VALID_CE_RATE_TYPES' as table_name, count(*) as row_count, :version_val as version from VALID_CE_RATE_TYPES UNION
select 'VALID_CLASS_REPORT_FREQ' as table_name, count(*) as row_count, :version_val as version from VALID_CLASS_REPORT_FREQ UNION
select 'VALID_FREQUENCY_BASE' as table_name, count(*) as row_count, :version_val as version from VALID_FREQUENCY_BASE UNION
select 'VALID_NARR_FORMS' as table_name, count(*) as row_count, :version_val as version from VALID_NARR_FORMS UNION
select 'VALID_PROTO_ACTION_ACTION' as table_name, count(*) as row_count, :version_val as version from VALID_PROTO_ACTION_ACTION UNION
select 'VALID_PROTO_ACTION_CORESP' as table_name, count(*) as row_count, :version_val as version from VALID_PROTO_ACTION_CORESP UNION
select 'VALID_PROTO_SUB_REV_TYPE' as table_name, count(*) as row_count, :version_val as version from VALID_PROTO_SUB_REV_TYPE UNION
select 'VALID_PROTO_SUB_TYPE_QUAL' as table_name, count(*) as row_count, :version_val as version from VALID_PROTO_SUB_TYPE_QUAL UNION
select 'VALID_RATES' as table_name, count(*) as row_count, :version_val as version from VALID_RATES UNION
select 'VALID_SP_REV_APPROVAL' as table_name, count(*) as row_count, :version_val as version from VALID_SP_REV_APPROVAL UNION
select 'VERSION_HISTORY' as table_name, count(*) as row_count, :version_val as version from VERSION_HISTORY UNION
select 'VULNERABLE_SUBJECT_TYPE' as table_name, count(*) as row_count, :version_val as version from VULNERABLE_SUBJECT_TYPE UNION
select 'WATERMARK' as table_name, count(*) as row_count, :version_val as version from WATERMARK UNION
select 'YNQ' as table_name, count(*) as row_count, :version_val as version from YNQ UNION
select 'YNQ_EXPLANATION' as table_name, count(*) as row_count, :version_val as version from YNQ_EXPLANATION UNION
select 'YNQ_EXPLANATION_TYPE' as table_name, count(*) as row_count, :version_val as version from YNQ_EXPLANATION_TYPE;
